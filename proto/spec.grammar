token
	.	= /[ \t]+/			# skip spaces
	.	= /#[^\n]*/			# skip comments

	number	= /0|[1-9][0-9]*/
	name	= /[a-z](-?[0-9a-z])*/
	string	= /"([^"\\]|(\\["\\]))*"/
	eol	= /\n+/				# and skip empty lines

	colon	= ":"
	open	= "{"
	close	= "}"
	eq	= "="
	comma	= ","
	star	= "*"

grammar
	spec	= (group | class)*

	class	= "class" name                        ["{" eol child* "}"] eol
	group	= "group" name             ":" string ["{" eol child* "}"] eol
	nodes	= "nodes" name             ":" string ["{" eol nspec  "}"] eol
	node	= "node"  name ["=" const] ":" string ["{" eol nspec  "}"] eol
	attrs	= "attrs" name             ":" string ["{" eol limit  "}"] eol
	attr	= "attr"  name ["=" const] ":" string ["{" eol limit  "}"] eol

	const	= name | number | string

	child	= group | nodes | node | attrs | attr | cref
	nspec	= limit child*
	limit	= value* (num | match)? ref?

	value	= "value" const ":" string eol
	num	= "number" "from" number "to" number eol
	match	= "match" name string? ("or" name string?)* eol
	ref	= "ref" (name | "*")+ eol
	cref	= "class" name ("," name)* eol

